p,61

제 5절 식별자

1. 식별자(Identifiers) 개념

여러 개의 집합체를 담고 있는 하나의 통에서 각각을 구분할 수 있는 논리적인 이름이 있어야 한다. 
이 구분자를 식별자(Identifier)라고 한다. 
[ 식별자란 ] 하나의 엔티티에 구성되어 있는 [ 여러 개의 속성 중 ]에서 [ 엔티티를 대표할 수 있는 속성 ]을 의미하며 
[ 하나의 엔티티 ]는 [ 반드시 하나의 유일한 식별자 ]가 존재해야 한다.

여기서 [ 식별자 ]와 [ 키를 ] 동일하게 생각하는 경우가 있는데 
[ 식별자라는 용어 ]는 [ 업무적으로 구분 ]이 되는 정보로 생각할 수 있으므로 [ 논리 데이터 모델링 단계 ]에서 사용하고, 
[ 키는 ] 데이터베이스 [ 테이블에 접근을 위한 매개체 ]로서 [ 물리 데이터 모델링 단계 ]에서 사용한다.

2. 식별자의 특징

- [ 주식별자에 의해 ] 엔티티 내에 모든 인스턴스들이 유일하게 구분되어야 한다.

- 주식별자를 구성하는 속성의 수는 [ 유일성을 만족하는 최소의 수 ]가 되어야 한다.

- 지정된 주식별자의 값은 자주 변하지 않는 것이어야 한다.

- 주식별자가 지정이 되면 [ 반드시 값이 들어와야 ] 한다. -- NOT NULL 


p,62


-주식별자(primary key)의 특징
유일성, 최소성, 불변성, 존재성
유일성: 주식별자에 의해 엔터티 내에 모든 인스턴스들을 [ 유일하게 구분 ]함
최소성: 주식별자를 구성하는 속성의 수는 유일성을 만족하는 최소의 수가 되어야함 
불변성: 주식별자가 한 번 특정 엔터티에 지정되면 [ 그 식별자의 값은 변하지 않아야 ] 함 
존재성: 주식별자가 지정되면 반드시 데이터 값이 존재 (NULL x )

기본키primary key: 후보키 중에서 엔터티를 대표하는 키

후보키candidate key: 유일성과 최소성을 만족하는 키

슈퍼키super key: 유일성을 만족하지만 최소성은 만족하지 못함

대체키alternate key: 여러 개의 후보키 중에서 기본키를 선정하고 남은 키

외래키foreign key: 참조 무결성을 확인하기 위해 사용되는 키.


p,62 ~ 63

가. 식별자 분류 

-<<<  식별자의 종류  >>>  - 

1. 대표성여부에 따라 --> 주 식별자, 보조식별자 

주식별자: [ 유일성 ]과 [ 최소성 ]을 만족하면서 엔터티를 대표하는 식별자. [ 다른 엔터티와 참조 관계로 연결 ]될 수 있음

보조 식별자: 유일성, 최소성은 만족하지만 [ 대표성을 만족하지 못함 ]

2. [ 스스로 생성 여부 ]에 따라 --> 내부, 외부 

[ 내부 ] 식별자: 엔터티 내부에서 스스로 생성되는 식별자

[ 외부 ] 식별자: [ 다른 엔터티와의 관계로 ] 만들어지는 식별자 --> 다른 엔티티로부터 받아오는 식별자

3. [ 속성의 수 ]에 따라( 단일 속성여부)  --> 단일 ,복합

[ 단일 ] 식별자: 하나의 속성으로 구성

복합 식별자: 두 개 이상의 속성으로 구성

4. [ 대체 여부 ]에 따라  --> 본질, 인조 

[ 본질 ] 식별자: [ 업무에서 만들어지는 ] 식별자

[ 인조 ] 식별자: [ 인위적으로 만들어지는 ] 식별자(순서 번호 사용) 


p,64

4. 주식별자 도출기준

- 해당 업무에서 [ 자주 이용되는 속성을 ] 주식별자로 지정한다.

- 명칠, 내역 등과 같이 [ 이름으로 기술되는 것들은 ] 가능하면 주식별자로 [ 지정하지 않는다. ]

- [ 복합으로 주식별자로 구성 ]할 경우 [ 너무 많은 속성이 포함되지 않도록 ] 한다.

p,67

5. 식별자관계와 비식별자관계에 따른 식별자

가. 식별자관계와 비식별자 관계의 결정

외부식별자(Foreign Identifier) : 

자기 자신의 엔티티에서 필요한 속성이 아니라 [ 다른 엔티티와의 관계를 통해 ]
[ 자식 쪽에 ] 엔티티에 생성되는 속성을 [ 외부식별자 ]라 하며 데이터베이스 생성시에 Foreign Key 역할을 한다. 
또한 엔티티에 주식별자에 지정되고 엔티티간 관계를 연결하면 부모쪽의 주식별자를 [ 자식엔티티의 속성으로 내려 보낸다. ]


나. 식별자 관계

부모로부터 받은 식별자를 [ 자식엔티티의 주식별자로 ] 이용하는 경우는 Null값이 오면 안되므로 
반드시 [ 부모엔티티가 생성되어야 ] [ 자기 자신의 엔티티가 생성되는 경우 ]이다. 

부모로부터 받은 속성을 자식엔티티가 모두 사용하고 [ 그것만으로 주식별자로 사용한다면  ]
부모엔티티와 자식엔티티의 관계는 1:1 관계가 될 것 이고 

만약 부모로부터 받은 속성을 포함하여 [ 다른 부모 엔티티에서 받은 속성을 포함 ] 하거나 [ 스스로 가지고 있는 속성과 함께 ] 
주식별자로 구성되는 경우는 1:M 관계가 된다.

이와 같이 [ 자식엔티티의 주식별자로 ] [ 부모의 주식별자가 상속이 되는 경우를 ] 식별자관계(Identifying Relationship)라고 지칭한다.
* 부모의 주식별자가 자식엔티티의 주식별자로 사용되는 경우 = 식별자 관계

p,69
다. 비식별자 관계

부모엔티티로부터 속성을 받았지만 ** [ 자식엔티티의 주식별자로 사용하지 않고 ] **
[ 일반적인 속성으로만 사용하는 경우 ]를 [ 비식별자 관계(Non-Identifying Relationship) ]라고 한다. 

다음 네가지 경우에 [ 비식별자 관계에 의한 외부속성을 생성 ]한다.


1) 자식엔티티에서 [ 받은 속성이 반드시 필수가 아니어도 무방 ]하기 때문에 [ 부모 없는 자식이 생성될 수 있는 경 ]우

2) 엔티티별로 데이터의 생명주기를 다르게 관리할 경우

3) 여러 개의 엔티티가 [ 하나의 엔티티로 통합되어 표현 ]되었는데 [ 각각의 엔티티가 별도의 관계를 가질 때 ]

4) 자식엔티티에 주식별자로 사용해도 되지만 [ 자식엔티티에서 별도의 주식별자를 생성하는 것이 더 유리 ]하다고 판단 될 때


p,70
라. [ 식별자 관계로만 ] 설정할 경우의 문제점

부모에서 자식으로 [ 식별자 관계로 연결 ]되므로 인해 [ 주식별자의 속성 수 ]가 많아짐 



p,73

마. 비식별자 관계로만 설정할 경우의 문제점

일반적으로 각각의 엔티티에는 중요한 [ 기준 속성이 있는데 ] 이러한 기준속성은 [ 부모엔티티에 있는 PK 속성 ]으로부터 상속되어 
[ 자식엔티티에 존재 ]하는 경우가 많다. 이러한 속성의 예로 '주민등록번호', '사원번호' 등이 있는데 
이러한 속성은 부모엔티티를 조회할 때도 쓰이지만
[ 자식 엔티티의 데이터를 조회 ]할 떄도 해당 조건이 [ 조회의 조건으로 걸리는 경우 ]가 다수 있다.

그런데 데이터 모델링을 전개할 때 각 엔티티간의 관계를 [ 비식별자 관계로 설정 ]하면 
이런 유형의 속성이 자식엔티티로 상속이 되지 않아 
자식엔티티에서 데이터를 처리할 때 [ 쓸데 없이 부모엔티티까지 찾아가야 하는 경우 ]가 발생된다.

이렇게 비식별자 관계로만 데이터모델링을 전개할 경우, [ SQL 구분에 많은 조인이 걸리게 되고 ]
그에 따라 복잡성이 증가하고 성능이 저하되게 되는 것이다. 

[ 식별자 관계를 통하여 ] 연결을 하게 되면 [ 부모의 모든 주식별자 속성을 ] [ 상속받음으로 ] 인해 
[ 맨 하위에 있는 자식엔티티에서 ] [ 바로 조회의 조건을 이용 ]하여 원하는 정보를 가져올 수 있게 된다.


p,75

1) 비식별자관계 선택 프로세스

여기서 가장 중요한 요인은 자식엔티티의 독립된 주식별자 구성이 필요한지를 분석하는 부분이다. 

독립적으로 주식별자를 구성한다는 의미는 업무적 필요성과 성능상 필요여부를 모두 포함하는 의미로 이해하면 된다.

p,76
2) 식별자와 비식별자관계 비교 

1. 식별자 관계 : 강한 관계
2. 비식별자 관계 : 약한 관계

                             식별자 관계                                    비식별자 관계
목적                      강한 연결관계                               약한 연결관계 표현

자식 주식별자
 영향                   자식 주식별자의 구성에포함             자식 일반속성에 포함

표기법                   실선 표현                                       점선 표현

연결 고려사항     반드시 부모엔티티 종속                자식 주식별자 구성을 독립적으로 구성
                        

3) 식별자와 비식별자를 적용한 데이터모델 

SCH_점검, SCH_점검상세, SCH_메일발송이력이 비식별자

SCH_프로젝트 단계, SCH_프로젝트연락이력이 식별자 관계를 적용한 모델이다.







